#!/bin/bash

# This script is kept at https://vdt.cs.wisc.edu/svn/software/tools/osg-koji-offsite-backup

# Script to back up to a remote location the important directories in the OSG's
# Koji infrastructure. Should be run on host-3.
# I get around the "what if today's backups aren't done yet" problem by sending
# yesterday's backups instead. Should be fine since we run this once a week.

# Set these:
REMOTE_LOGIN=osgsoftware
REMOTE_HOST=backup.grid.iu.edu
REMOTE_BASE_PATH=/usr/local/backup/osgsoftware
LOCAL_BACKUP_ROOT=/export/backup
KOJIHOST=koji-hub.batlab.org
DBHOST=db-01.batlab.org
RETRIES=10
RETRY_WAIT=60
# a copy of the key is under /p/vdt/private
KEY=/root/osg_backup_key

################################################################################

die () {
    echo "$@" >&2
    exit 1
}

require_var () {
    local var="${1?Usage: require_var VAR}"
    eval "[[ -n \$$var ]]" || die "$var not specified"
}

rsync_with_retry_or_die () {
    local src_path="$1" dest_path="$2" link_path="${3-}" count=0 rsync_opts ret
    rsync_opts=(-rzq --partial --partial-dir=.rsync-partial -e "ssh -i $KEY -o ServerAliveInterval=20")
    if [[ -n $link_path ]]; then
        rsync_opts+=(--link-dest="$link_path")
    fi
    while true; do
        rsync "${rsync_opts[@]}" "$src_path" "$REMOTE_LOGIN@$REMOTE_HOST:$dest_path"; ret=$?
        if [[ $ret -eq 0 ]]; then
            return 0
        fi
        if [[ $count -ge $RETRIES ]]; then
            die "Hit max retries while rsyncing $src_path to $REMOTE_LOGIN@$REMOTE_HOST:$dest_path; giving up"
        else
            (( count++ ))
            sleep $RETRY_WAIT
        fi
    done
}

################################################################################
set -o nounset

# Sanity check
require_var REMOTE_LOGIN
require_var REMOTE_HOST
require_var REMOTE_BASE_PATH
require_var LOCAL_BACKUP_ROOT
require_var KOJIHOST
require_var DBHOST
require_var RETRIES
require_var RETRY_WAIT

tempdir=$(mktemp -d)
backup_date=$(date +%F -d 'yesterday')
last_backup_date=$(date +%F -d '8 days ago')
workdir=$tempdir/$backup_date
todays_backups=$LOCAL_BACKUP_ROOT/$backup_date
remote_link_path=$REMOTE_BASE_PATH/$last_backup_date
remote_path=$REMOTE_BASE_PATH/$backup_date

set -o errexit
cd "$todays_backups"
mkdir -p "$workdir"
tar czpf "$workdir/etc.tar.gz"           "$KOJIHOST/rootfs/etc"
tar czpf "$workdir/roothome.tar.gz"      "$KOJIHOST/rootfs/root"
tar czpf "$workdir/pgsql.tar.gz"         "$DBHOST/rootfs/var/lib/pgsql"
tar czpf "$workdir/pgsql-backup.tar.gz"  "$DBHOST/rootfs/var/lib/pgsql-backup"
[[ -d $KOJIHOST/kojifs/packages ]]
set +o errexit

trap "echo Interrupted; exit 3;" SIGINT SIGTERM
rsync_with_retry_or_die "$workdir/"                   "$remote_path"
rsync_with_retry_or_die "$KOJIHOST/kojifs/packages/"  "$remote_path/packages"  "$remote_link_path/packages"

rm -rf $tempdir

