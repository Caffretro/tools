#!/usr/bin/env python
"""Build a table in JIRA syntax for the latest builds of the given packages
in a tag.  Useful if you need a new copy of the table that osg-promote
generates.

"""
import re
import subprocess
from subprocess import Popen, PIPE
import sys


def get_args(argv):
    try:
        return argv[1], argv[2:]
    except IndexError:
        return None, None


def get_latest_build(tag, package):
    """Get the latest build NVR for a package in the given tag, or None on failure"""
    proc = Popen(["osg-koji", "-q", "list-tagged", "--latest", tag, package],
                  stdout=PIPE)
    out = proc.communicate()[0] or ''
    ret = proc.returncode

    latest_build_line = out.strip()

    if ret != 0 or not latest_build_line:
        return

    return latest_build_line.split()[0]


def get_build_line(latest_build):
    """Get the line containing the build ID from `koji buildinfo` output"""
    proc = Popen(["osg-koji", "buildinfo", latest_build],
                 stdout=PIPE)
    build_line = proc.stdout.readline().strip()
    ret = proc.wait()
    if ret != 0 or not build_line:
        return
    return build_line


def get_build_id(build_line):
    """Get the build ID from the line containing it from `koji buildinfo`"""
    match = re.search(r'\[(\d+)\]', build_line)
    if match:
        return match.group(1)


def main(argv):
    tag, packages = get_args(argv)
    if not (tag and packages) or '-h' in argv or '--help' in argv:
        print >> sys.stderr, "Usage:", argv[0], "<tag> <packages>..."
        return 2

    lines = []

    for package in packages:
        latest_build = get_latest_build(tag, package)
        if not latest_build:
            print >> sys.stderr, "Error getting latest build for", package
            return 1
        build_line = get_build_line(latest_build)
        if not build_line:
            print >> sys.stderr, "Error getting build info for", latest_build
            return 1
        build_id = get_build_id(build_line)
        if not build_id:
            print >> sys.stderr, "Error getting build ID; text returned was:"
            print >> sys.stderr, build_line
            return 1
        build_url = "https://koji-hub.batlab.org/koji/buildinfo?buildID=" + build_id
        lines.append("| %(tag)s | [%(latest_build)s|%(build_url)s] |" % locals())

    if lines:
        print "|| Tag || Build ||"
        print "\n".join(lines)

    return 0

if __name__ == "__main__":
    sys.exit(main(sys.argv))

